{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/src/views/Courses/courseView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/src/views/Courses/courseView.vue","mtime":1635520922912},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1634955519578},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1634955526187},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1634955517222},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGggewogIHRleHQtYWxpZ246IGxlZnQ7CiAgZm9udC1zaXplOiAxLjVyZW0gIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["courseView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA","file":"courseView.vue","sourceRoot":"src/views/Courses","sourcesContent":["<template>\n  <div>\n    <Nav/>\n<H1 style=\"background-color: #811429; color:#f2f2f2\">Course View</H1>\n<br>\n <h2><v-btn :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"cancel()\" color=\"black\" text rounded>Go Back</v-btn></h2>\n    <h3><v-btn :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"updateCourse(course)\" text rounded>Edit</v-btn>\n    <br>\n    <v-btn color=\"#E53935\" :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"deleteCourse(course)\" text rounded>Delete</v-btn>\n   </h3>\n  <v-form>\n        <v-col>\n            <v-text-field readonly label=\"Course Number\" v-model=\"course.courseNum\" type=\"text\" id=\"courseNum\"/>\n            <v-text-field readonly label=\"Course Name\" v-model=\"course.name\" type=\"text\" id=\"courseNum\"/>\n            <v-text-field readonly label=\"Department\" v-model=\"course.dept\" type=\"text\" id=\"dept\" />\n            <v-text-field readonly label=\"Hours\" v-model=\"course.hours\" type=\"text\" id=\"hours\"/>\n            <v-text-field readonly label=\"Level\" v-model=\"course.level\" type=\"text\" id=\"level\"/>\n            <v-textarea readonly label=\"Description\" v-model=\"course.desc\" type=\"text\" id=\"desc\" />\n       </v-col>\n    </v-form>\n<confirm-dialog ref=\"confirmDialog\"></confirm-dialog>\n  </div>\n</template>\n\n<script>\nimport courseServices from '@/services/courseServices.js'\nimport ConfirmDialog from '@/components/ConfirmDialog.vue'\nexport default {\n  props: ['id'],\n  components: {ConfirmDialog},\n  data() {\n    return {\n      course: {}\n      \n    }\n  },\n  created() {\n      courseServices.getCourse(this.id)\n      .then(response => {\n        this.course = response.data,\n        console.log(this.course)\n      })\n      .catch(error => {\n        console.log('There was an error:', error.response)\n        \n      })\n        \n      .catch(error => {\n        console.log('There was an error:', error.response)\n      })\n  },\n  methods: {\n    addForm(){\n      this.addCourseDisplay = true;\n    },\n    updateCourse(course) {\n          this.$router.push({ name: 'edit', params: {id: course.courseID}})\n        .then(() => {\n        })\n        .catch(error => {\n         console.log(error)\n        })\n    },\n    cancel() {\n      this.$router.push({ name: 'courses' })\n    },\n\n    async deleteCourse(course){\n      let id = course.courseID\n      if(confirm(\"Do you really want to delete?\")){\n    courseServices.deleteCourse(id)\n      .then(() => {\n         this.$router.push({ name: 'courses' }) \n        })\n       \n        \n        .catch(error => {\n          console.log(error)\n        })\n      }\n    },\n    \n}\n}\n</script>\n\n<style>\nth {\n  text-align: left;\n  font-size: 1.5rem !important;\n}\n</style> \n"]}]}
{"remainingRequest":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\src\\components\\ConfirmDialog.vue?vue&type=style&index=0&id=055d7028&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\src\\components\\ConfirmDialog.vue","mtime":1634140030799},{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\css-loader\\dist\\cjs.js","mtime":1634137588269},{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1634137599132},{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\postcss-loader\\src\\index.js","mtime":1634137593655},{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Documents\\Software Engineering Homework\\Project3Frontend\\SEProject3FrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":1634137599131}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYnRucyB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LWRpcmVjdGlvbjogcm93Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCn0NCg0KLm9rLWJ0biB7DQogICAgY29sb3I6IHJlZDsNCiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsNCiAgICBsaW5lLWhlaWdodDogMi41cmVtOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNhbmNlbC1idG4gew0KICAgIHBhZGRpbmc6IDAuNWVtIDFlbTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDVlYWU3Ow0KICAgIGNvbG9yOiAjMzU5MDdmOw0KICAgIGJvcmRlcjogMnB4IHNvbGlkICMwZWM1YTQ7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg=="},{"version":3,"sources":["ConfirmDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfirmDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <popup-modal ref=\"popup\">\r\n        <h2 style=\"margin-top: 0\">{{ title }}</h2>\r\n        <p>{{ message }}</p>\r\n        <div class=\"btns\">\r\n            <button class=\"cancel-btn\" @click=\"_cancel\">{{ cancelButton }}</button>\r\n            <span class=\"ok-btn\" @click=\"_confirm\">{{ okButton }}</span>\r\n        </div>\r\n    </popup-modal>\r\n</template>\r\n\r\n<script>\r\nimport PopupModal from './PopupModal.vue'\r\n\r\nexport default {\r\n    name: 'ConfirmDialog',\r\n\r\n    components: { PopupModal },\r\n\r\n    data: () => ({\r\n        // Parameters that change depending on the type of dialogue\r\n        title: undefined,\r\n        message: undefined, // Main text content\r\n        okButton: undefined, // Text for confirm button; leave it empty because we don't know what we're using it for\r\n        cancelButton: 'Go Back', // text for cancel button\r\n        \r\n        // Private variables\r\n        resolvePromise: undefined,\r\n        rejectPromise: undefined,\r\n    }),\r\n\r\n    methods: {\r\n        show(opts = {}) {\r\n            this.title = opts.title\r\n            this.message = opts.message\r\n            this.okButton = opts.okButton\r\n            if (opts.cancelButton) {\r\n                this.cancelButton = opts.cancelButton\r\n            }\r\n            // Once we set our config, we tell the popup modal to open\r\n            this.$refs.popup.open()\r\n            // Return promise so the caller can get results\r\n            return new Promise((resolve, reject) => {\r\n                this.resolvePromise = resolve\r\n                this.rejectPromise = reject\r\n            })\r\n        },\r\n\r\n        _confirm() {\r\n            this.$refs.popup.close()\r\n            this.resolvePromise(true)\r\n        },\r\n\r\n        _cancel() {\r\n            this.$refs.popup.close()\r\n            this.resolvePromise(false)\r\n            // Or you can throw an error\r\n            // this.rejectPromise(new Error('User cancelled the dialogue'))\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.btns {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.ok-btn {\r\n    color: red;\r\n    text-decoration: underline;\r\n    line-height: 2.5rem;\r\n    cursor: pointer;\r\n}\r\n\r\n.cancel-btn {\r\n    padding: 0.5em 1em;\r\n    background-color: #d5eae7;\r\n    color: #35907f;\r\n    border: 2px solid #0ec5a4;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n}\r\n</style>"]}]}
{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/src/views/Students/StudentView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/src/views/Students/StudentView.vue","mtime":1635566768443},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1634955519578},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1634955526187},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1634955517222},{"path":"/Applications/XAMPP/xamppfiles/htdocs/SE4Projects/SE-Project3/SEProject3FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0aCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBmb250LXNpemU6IDEuNXJlbSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["StudentView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA","file":"StudentView.vue","sourceRoot":"src/views/Students","sourcesContent":["<template>\n  <div>\n<H1 style=\"background-color: #811429; color:#f2f2f2\">Student View</H1>\n<br>\n <h2><v-btn :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"cancel()\" color=\"black\" text rounded>Go Back</v-btn></h2>\n    <h3><v-btn :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"updatestudent(student)\" text rounded>Edit</v-btn>\n   <br>\n    <v-btn color=\"#E53935\" :style=\"{left: '50%', transform:'translateX(-50%)'}\" v-on:click.prevent=\"deleteStudent(student)\" text rounded>Delete</v-btn>\n   </h3>\n  <v-form>\n        <v-col>\n            <v-text-field readonly label=\"advisorID\" v-model=\"student.advisorID\" type=\"text\" id=\"advisorID\"/>\n            <v-text-field readonly label=\"Degree\" v-model=\"student.degreeID\" type=\"text\" id=\"degreeID\"/>\n            <v-text-field readonly label=\"First Name\" v-model=\"student.fName\" type=\"text\" id=\"fName\" />\n            <v-text-field readonly label=\"Last Name\" v-model=\"student.lName\" type=\"text\" id=\"lName\"/>\n            <v-text-field readonly label=\"Major\" v-model=\"student.major\" type=\"text\" id=\"major\"/>\n            <v-text-field readonly label=\"Graduation Date\" v-model=\"student.grad_date\" type=\"text\" id=\"grad_date\"/>\n             <v-text-field readonly label=\"Email\" v-model=\"student.email\" type=\"text\" id=\"email\" />\n       </v-col>\n    </v-form>\n<confirm-dialog ref=\"confirmDialog\"></confirm-dialog>\n  </div>\n</template>\n\n<script>\nimport courseServices from '@/services/courseServices.js'\nimport ConfirmDialog from '@/components/ConfirmDialog.vue'\nexport default {\n  props: ['id'],\n  components: {ConfirmDialog},\n  data() {\n    return {\n      student: {}\n      \n    }\n  },\n  created() {\n    console.log(this.id + \"here again\")\n      courseServices.getStudent(this.id)\n      \n      .then(response => {\n        \n        this.student = response.data\n        \n      })\n        \n      .catch(error => {\n        console.log('There was an error:', error.response)\n      })\n  },\n  methods: {\n    addForm(){\n      this.addStudentDisplay = true;\n    },\n    updatestudent(student) {\n          this.$router.push({ name: 'editstudent', params: {id: student.studentID}})\n        .then(() => {\n        })\n        .catch(error => {\n         console.log(error)\n        })\n    },\n    cancel() {\n      this.$router.push({ name: 'studentlist' })\n    },\n\n    async deleteStudent(student){\n      let id = student.studentID\n      if(confirm(\"Do you really want to delete?\")){\n    courseServices.deleteStudent(id)\n      .then(() => {\n         this.$router.push({ name: 'studentlist' }) \n        })\n       \n        \n        .catch(error => {\n          console.log(error)\n        })\n      }\n    },\n    \n}\n}\n</script>\n\n<style>\nth {\n  text-align: left;\n  font-size: 1.5rem !important;\n}\n</style> "]}]}